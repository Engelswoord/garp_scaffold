<?php
$locales		= Garp_I18n::getLocales();
$defaultLocale 	= Garp_I18n::getDefaultLocale();
usort($locales, function($a, $b) use ($defaultLocale) {
    // sort default locale on top
    return $a === $b ? 0 : ($a === $defaultLocale ? -1 : 1);
});
$fieldSet		= $this->fieldSet;
$excludedFields	= $this->spawnJs()->getExcludedFormFields();
$relations      = $this->relations;
$modelSet       = $this->modelSet;

/**
 * @return 	String 	The English label for the given language id
 */
$getLanguageLabel = function($language) {
	$list = Zend_Locale::getTranslationList('language', 'en');
	if (isset($list[$language])) {
		return $list[$language];
	}
	return $language;
};

$isExcludedField = function(Garp_Spawn_Field $field) use ($excludedFields) {
	$isExcludedField = in_array($field->name, $excludedFields);
	return $isExcludedField;
};

$renderLanguageSet = function($language, $view) use ($fieldSet, $relations, $getLanguageLabel, $defaultLocale, $isExcludedField, $modelSet) {
	$languageLabel 		= $getLanguageLabel($language);
	$fieldSetOutputs 	= array();
	$isForDefaultLocale = $defaultLocale === $language;

	foreach ($fieldSet as $field) {
		if (!$field->isMultilingual()) 	continue;
		if ($isExcludedField($field)) 	continue;

		$path = 'partials/spawn/js/input-field.phtml';
		$params = array(
			'field' 	=> $field,
			'language'	=> $language
		);
		if (!$isForDefaultLocale) {
			$params['required'] = false;
		}

		$fieldSetOutputs[] = $view->partial($path, 'g', $params);
	}

	foreach ($relations as $rel) {
		if ($rel->model === 'Image') {
			$fieldSetOutputs[] = $view->partial('partials/spawn/js/image-field.phtml', 'g', array(
				'relation' => $rel,
				'locale' => $language
			));
		} else {
			$fieldSetOutputs[] = $view->partial('partials/spawn/js/singular-relation-field.phtml', 'g', array(
				'relationName' 	=> $rel->name,
				'relation' 		=> $rel,
				'simpleSelect' 	=> $rel->simpleSelect,
				'modelSet' 		=> $modelSet,
				'locale'        => $language
			));
		}
	}

	$fieldSetString	= implode('}, {', $fieldSetOutputs);

	$languageSetProps = array(
		"ref: '../../../{$language}_fieldset'",
		"xtype: 'i18nfieldset'",
		"title: __('{$languageLabel}')",
		//"collapsed: " . ($isForDefaultLocale ? 'false' : 'true'),
		"collapsed: false",
		"items: [{{$fieldSetString}}]"
	);

	$languageSetString = implode(', ', $languageSetProps);

	return $languageSetString;
};

$languageSets = array();
foreach ($locales as $locale) {
	$languageSets[] = $renderLanguageSet($locale, $this);
}

echo implode('}, {', $languageSets);
